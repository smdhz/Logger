#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logger
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Note")]
	public partial class LogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertShipLog(ShipLog instance);
    partial void UpdateShipLog(ShipLog instance);
    partial void DeleteShipLog(ShipLog instance);
    #endregion
		
		public LogDataContext() : 
				base(global::Logger.Properties.Settings.Default.NoteConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ShipLog> ShipLog
		{
			get
			{
				return this.GetTable<ShipLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShipLog")]
	public partial class ShipLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Time;
		
		private string _Area;
		
		private string _Enemy;
		
		private char _Rank;
		
		private string _Drop;
		
		private System.Nullable<System.Guid> _Fight;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnEnemyChanging(string value);
    partial void OnEnemyChanged();
    partial void OnRankChanging(char value);
    partial void OnRankChanged();
    partial void OnDropChanging(string value);
    partial void OnDropChanged();
    partial void OnFightChanging(System.Nullable<System.Guid> value);
    partial void OnFightChanged();
    #endregion
		
		public ShipLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enemy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Enemy
		{
			get
			{
				return this._Enemy;
			}
			set
			{
				if ((this._Enemy != value))
				{
					this.OnEnemyChanging(value);
					this.SendPropertyChanging();
					this._Enemy = value;
					this.SendPropertyChanged("Enemy");
					this.OnEnemyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="NChar(1) NOT NULL")]
		public char Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Drop]", Storage="_Drop", DbType="NVarChar(50)")]
		public string Drop
		{
			get
			{
				return this._Drop;
			}
			set
			{
				if ((this._Drop != value))
				{
					this.OnDropChanging(value);
					this.SendPropertyChanging();
					this._Drop = value;
					this.SendPropertyChanged("Drop");
					this.OnDropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fight", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Fight
		{
			get
			{
				return this._Fight;
			}
			set
			{
				if ((this._Fight != value))
				{
					this.OnFightChanging(value);
					this.SendPropertyChanging();
					this._Fight = value;
					this.SendPropertyChanged("Fight");
					this.OnFightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
